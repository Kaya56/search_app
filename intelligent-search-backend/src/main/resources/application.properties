# Spring Application Configuration
spring.application.name=search-engine
server.port=8080
server.address=0.0.0.0

# Configuration de sécurité - Clés API
security.api.keys=dev-api-key-123,admin-key-456,test-key-789

# Datasource Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/search_engine
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.sql.init.mode=always

# Elasticsearch Configuration
spring.elasticsearch.uris=http://localhost:9200
spring.elasticsearch.username=elastic
spring.elasticsearch.password=GXsCdtIzXf8aGF18iQXC

# Redis Configuration - Valeurs corrigées sans unités
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics
management.endpoint.health.show-details=always

# Scoring Configuration
app.scoring.weight.popularity=0.3
app.scoring.weight.freshness=0.3
app.scoring.weight.relevance=0.2
app.scoring.weight.location=0.2
app.scoring.popularity.max-score=100.0
app.scoring.popularity.default-score=50.0
app.scoring.freshness.max-age-days=30
app.scoring.location.max-distance-km=1000

# Session Configuration
app.session.ttl-minutes=30

# Cache Configuration
app.cache.ttl-seconds=3600

# Security Configuration
app.security.ip-whitelist=127.0.0.1,::1,0:0:0:0:0:0:0:1

# Alerts Configuration
app.alerts.enabled=true

# Logging Configuration
logging.level.com.searchengine=DEBUG
logging.level.org.springframework=INFO

# JMX Configuration
spring.jmx.enabled=true
management.endpoints.jmx.exposure.include=*

security.enabled=false









# Auth endpoints
backend.auth.url=http://localhost:8080/api/auth
backend.register.url=http://localhost:8080/api/register
backend.reset.url=http://localhost:8080/api/reset-credentials
backend.validate.token.url=http://localhost:8080/api/validate-token
backend.update.account.url=http://localhost:8080/api/account
backend.delete.account.url=http://localhost:8080/api/account